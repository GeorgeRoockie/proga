LINE_FOR_BOARD = '|'
O_FOR_BOARD = 'O'
MARK_SHIP = '■'
class Board:
    def __init__(self, r=7, c=14):
        self.r = r
        self.c = c

    def create_board(self, l, o, matrix=[]):
        def make_field(matrix):
            for i in range(self.r):
                temp = [o for i in range(self.r)]
                for j in range(1, len(temp) * 2, 2):
                    temp.insert(j, l)
                matrix.append(temp)
            self.matrix = matrix
        def make_contour():
            counter = -1
            for i in range(0, self.c, 2):
                counter += 1
                self.matrix[0][i] = counter
            counter = -1
            for j in range(len(self.matrix)):
                counter += 1
                self.matrix[j][0] = counter
            self.matrix[0][0] = ' '
        make_field(matrix)
        make_contour()

    def get_board(self):
        for i in range(len(self.matrix)):
            print(*self.matrix[i])

    def set_ship(self, x, y, route, length, mark):  # route = 1 - вертикаль, 0 - горизонталь
        if route:
            for r in range(length):
                self.matrix[x - r - 1][y] = mark
        else:
            for c in range(0, length * 2, 2):
                self.matrix[x][y + c] = mark



class Ship:
    def __init__(self, x, y, route, length, board):
        self.x = x
        self.y = y
        self.route = route
        self.length = length
        self.board = board
        self.mark = MARK_SHIP

    def create_ship(self):
        self.board.set_ship(self.x, self.y, self.route, self.length, self.mark)

    def mark_ship(self, mark):
        self.mark = mark

if __name__ == '__main__':
    board = Board()
    board.create_board(LINE_FOR_BOARD, O_FOR_BOARD)
    board.get_board()
    print()
    s = Ship(4, 12, 1, 3, board)
    s1 = Ship(2, 2, 0, 3, board)
    s.create_ship()
    s1.create_ship()
    board.get_board()
